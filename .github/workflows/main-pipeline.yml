name: Benchmarking Pipeline

on:
  push:
    branches:
      - itgold

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Say Hello
        run: echo "Hello World. Initiating the pipeline"

      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          ref: itgold

      - name: Get user input for instance parameters
        id: user-input
        run: |
          read -p "Enter instance_count (how many instances to create. Default - 1): " instance_count
          read -p "Enter instance_template_index (what types of ec2 instances to use. Default - 1): " instance_template_index
          echo "::set-output name=instance_count::$instance_count"
          echo "::set-output name=instance_template_index::$instance_template_index"

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ansible

      - name: Install Terraform
        run: |
          sudo apt-get update
          sudo apt-get install -y curl unzip
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt-get update && sudo apt-get install -y terraform

      - name: Create .env file
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          cd itgold/scripts
          echo "TF_VAR_aws_access_key: ${AWS_ACCESS_KEY_ID}" >> .env
          echo "TF_VAR_aws_secret_key: ${AWS_SECRET_ACCESS_KEY}" >> .env

      - name: Correct private key access permission
        run: |
          cd itgold/access
          chmod 600 id_rsa

      - name: Deploy Infrastructure
        run: |
          cd itgold/scripts
          ./init.sh ${{ steps.user-input.outputs.instance_template_index }} ${{ steps.user-input.outputs.instance_count }}

      - name: Confirm Destroy Infrastructure
        id: confirm-destroy
        run: |
          read -p "Do you want to destroy the infrastructure? (yes/no) " destroy_confirm
          echo "::set-output name=destroy_confirm::$destroy_confirm"

      - name: Destroy Infrastructure
        if: steps.confirm-destroy.outputs.destroy_confirm == 'yes'
        env:
          ANSIBLE_HOST_KEY_CHECKING: "false"
        run: |
          cd itgold/scripts
          ./destroy.sh